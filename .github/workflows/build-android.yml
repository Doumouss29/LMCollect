name: Build LM Collect (Android)

concurrency:
  group: build-android-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    branches: ["rebrand/lm-collect"]

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout (avec sous-modules)
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Définir les versions/app infos
        run: |
          echo "APP_VERSION=$(date +%Y.%m.%d)" >> $GITHUB_ENV
          echo "APP_VERSION_CODE=$(( $(date +%s) / 60 ))" >> $GITHUB_ENV
          echo "PKG_ID=com.doumouss29.lmcollect" >> $GITHUB_ENV
          echo "APP_NAME=LM Collect" >> $GITHUB_ENV

      - name: Générer icônes Android
        run: |
          sudo apt-get update && sudo apt-get install -y imagemagick
          mkdir -p platform/android/app/src/main/res
          declare -A S=( [mipmap-mdpi]=48 [mipmap-hdpi]=72 [mipmap-xhdpi]=96 [mipmap-xxhdpi]=144 [mipmap-xxxhdpi]=192 )
          for d in "${!S[@]}"; do
            mkdir -p platform/android/app/src/main/res/$d
            convert "branding/lmcollect/appicon_source.jpeg" \
              -resize ${S[$d]}x${S[$d]}^ -gravity center -extent ${S[$d]}x${S[$d]} \
              "platform/android/app/src/main/res/$d/ic_launcher.png"
          done

      - name: Splash (fond bleu)
        run: |
          mkdir -p platform/android/app/src/main/res/{drawable,values}
          cat > platform/android/app/src/main/res/drawable/splash_background.xml <<'XML'
          <?xml version="1.0" encoding="utf-8"?>
          <layer-list xmlns:android="http://schemas.android.com/apk/res/android">
            <item android:drawable="@color/splash_color"/>
          </layer-list>
          XML
          cat > platform/android/app/src/main/res/values/colors.xml <<'XML'
          <?xml version="1.0" encoding="utf-8"?>
          <resources>
            <color name="splash_color">#1E88E5</color>
          </resources>
          XML

      # ---------- BUILD DOCKER + CACHE ----------
      - name: Cache Gradle & vcpkg
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            qfield/build-arm64-android/_deps/vcpkg-src
          key: gradle-vcpkg-${{ runner.os }}-${{ hashFiles('**/build.gradle*','**/CMakeLists.txt') }}

      - name: Build Android via QField SDK (avec Ninja)
        run: |
          set -euo pipefail
          docker pull opengisch/qfield-sdk:latest
          docker run --rm \
            -v "$PWD":/usr/src/qfield \
            -w /usr/src/qfield \
            -e APP_VERSION -e APP_VERSION_CODE \
            -e PKG_ID -e APP_NAME \
            opengisch/qfield-sdk:latest \
            bash -lc '
              apt-get update && apt-get install -y ninja-build
              ANDROID_DIR="qfield/platform/android"
              if [ ! -d "$ANDROID_DIR" ]; then
                echo "❌ Dossier Android introuvable"; exit 1
              fi
              cd "$ANDROID_DIR"
              chmod +x ./gradlew
              export CMAKE_GENERATOR=Ninja
              ./gradlew assembleRelease
            '

      - name: Trouver l’APK produit
        id: f
        run: |
          APK=$(find . -type f -name "*.apk" | head -n1 || true)
          echo "apk=$APK" >> "$GITHUB_OUTPUT"
          [ -z "$APK" ] && { echo "Aucun APK trouvé"; exit 1; }
          echo "APK trouvé: $APK"

      - name: Décoder le keystore
        if: ${{ steps.f.outputs.apk != '' }}
        run: echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > keystore.jks

      - name: Signer & Aligner l’APK
        if: ${{ steps.f.outputs.apk != '' }}
        run: |
          sudo apt-get update && sudo apt-get install -y apksigner zipalign
          zipalign -p 4 "${{ steps.f.outputs.apk }}" lmcollect-aligned.apk
          apksigner sign \
            --ks keystore.jks \
            --ks-key-alias "${{ secrets.ANDROID_KEY_ALIAS }}" \
            --ks-pass pass:"${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" \
            --key-pass pass:"${{ secrets.ANDROID_KEY_PASSWORD }}" \
            --out lmcollect-signed.apk lmcollect-aligned.apk

      - name: Publier l’APK signé
        uses: actions/upload-artifact@v4
        with:
          name: lm-collect-apk
          path: lmcollect-signed.apk
